@model  Staff_Management.Models.GroupAdminViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <h2>Tasks</h2>
    <button id="OpenAddTaskButton" type="button" class="btn btn-primary mb-3">
        <i class="fas fa-plus"></i> Add Task
    </button>
    @if (ViewBag.ErrorMessage != null)
    {
        <div class="alert alert-warning font-weight-bold mt-2" role="alert">
            @ViewBag.ErrorMessage
        </div>
    }
    <div id="addTaskForm" class="card" style="display:none;">
        <div class="card-body">
            <h2>Add New Task</h2>
            @using (Html.BeginForm("AddTask", "GroupAdmin", FormMethod.Post))
            {
                <!-- Task Title -->
                <div class="form-group">
                    <label for="taskTitle"><strong>Task Title</strong></label>
                    <input type="text" class="form-control" id="taskTitle" name="Title" required>
                    <div class="invalid-feedback">Please provide a task title.</div>
                </div>
                <!-- Assigned Worker -->
                <div class="form-group">
                    <label for="staffSelect"><strong>Assign to Staff</strong></label>
                    <select id="staffSelect" name="StaffId" class="form-control">
                        @for (int j = 0; j < Model.ListGroupStaff.Count; j++)
                        {
                            var staff = Model.ListGroupStaff[j];
                            if (staff.StaffId == Model.StaffId)
                            {
                                <option value="@staff.StaffId" selected>@staff.StaffName @staff.StaffSurname</option>
                            }
                            else
                            {
                                <option value="@staff.StaffId">@staff.StaffName @staff.StaffSurname</option>
                            }
                        }
                    </select>
                    <div class="invalid-feedback">Please provide the assigned worker.</div>
                </div>
                <!-- Comment -->
                <div class="form-group">
                    <label for="taskComments"><strong>Comments</strong></label>
                    <textarea class="form-control" id="taskComments" name="Comment" rows="3" required></textarea>
                    <div class="invalid-feedback">Please provide some comments.</div>
                </div>
                <!-- Contents -->
                <div class="form-group">
                    <label for="taskContents"><strong>Contents</strong></label>
                    <textarea class="form-control" id="taskContents" name="Contents" rows="5" required></textarea>
                    <div class="invalid-feedback">Please provide some contents.</div>
                </div>
                <!-- Hidden field for status -->
                <input type="hidden" id="Status" name="Status" value="1">
                <button type="submit" class="btn btn-primary mt-2" id="saveTaskButton">Add Task</button>
                <button type="button" class="btn btn-danger mt-2" id="cancelTaskButton">Cancel</button>
            }
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success font-weight-bold mt-2" role="alert">
            @TempData["SuccessMessage"]
        </div>
    }
    else if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger font-weight-bold mt-2" role="alert">
            @TempData["ErrorMessage"]
        </div>
    }
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Status</th>
                <th>Task Title</th>
                <th>Assigned Worker</th>
                <th>Buttons</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var task in Model.ListTasks)
            {
                @Html.HiddenFor(model => task.TaskId)
                <tr>
                    <td>
                        @{
                            string CssClass;
                            string statusText;
                            switch (task.Status)
                            {
                                case 1:
                                    CssClass = "text-primary";
                                    statusText = "Open";
                                    break;
                                case 2:
                                    CssClass = "text-success";
                                    statusText = "Completed";
                                    break;
                                case 3:
                                    CssClass = "text-danger";
                                    statusText = "Problem";
                                    break;
                                default:
                                    CssClass = "";
                                    statusText = "Unknown";
                                    break;
                            }
                        }
                        <span class="@CssClass">@statusText</span>
                    </td>
                    <td>@task.Title</td>
                    <td>@task.StaffName @task.StaffSurname</td>
                    <td>
                        <div class="btn-group-action">
                            @{
                                switch (task.Status)
                                {
                                    case 1:
                                        CssClass = "btn-primary";
                                        break;
                                    case 2:
                                        CssClass = "btn-success";
                                        break;
                                    case 3:
                                        CssClass = "btn-danger";
                                        statusText = "Problem";
                                        break;
                                    default:
                                        CssClass = "";
                                        break;
                                }
                            }
                            <a class="btn @CssClass btn-sm" href="@Url.Action("Task", new { taskId = task.TaskId })">
                                <i class="fas fa-eye"></i> View Task
                            </a>
                            @if (task.Status != 2)
                            {
                                <form action="@Url.Action("UpdateTaskStatus", "GroupAdmin")" method="post" style="display:inline;">
                                    <input type="hidden" name="taskId" value="@task.TaskId" />

                                    <button type="submit" class="btn btn-success btn-sm">
                                        <i class="fas fa-check"></i> Complete
                                    </button>
                                </form>
                            }
                            <form action="@Url.Action("DeleteTask", "GroupAdmin")" method="post" style="display:inline;">
                                <input type="hidden" name="taskId" value="@task.TaskId" />
                                <button type="submit" class="btn btn-danger btn-sm">
                                    <i class="fas fa-trash"></i> Delete
                                </button>
                            </form>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        document.getElementById('OpenAddTaskButton').addEventListener('click', function () {
            document.getElementById('addTaskForm').style.display = 'block';
        });

        document.getElementById('cancelTaskButton').addEventListener('click', function () {
            document.getElementById('addTaskForm').style.display = 'none';
        });

    </script>
}