@model  Staff_Management.Models.GroupAdminViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <h2>Tasks</h2>
    <button id="OpenAddTaskButton" type="button" class="btn btn-primary mb-3"  >
        <i class="fas fa-plus"></i> Add Task
    </button>
    @if (ViewBag.ErrorMessage != null)
    {
        <div class="alert alert-warning font-weight-bold mt-2" role="alert">
            @ViewBag.ErrorMessage
        </div>
    }
    <h2>Add New Task</h2>
    <form id="addTaskForm" style="display:none;">
        <!-- Task Title -->
        <div class="form-group">
            <label for="taskTitle">Task Title</label>
            <input type="text" class="form-control" id="taskTitle" required>
            <div class="invalid-feedback">Please provide a task title.</div>
        </div>
        <!-- Assigned Worker -->
        <div class="form-group">
            <label for="taskWorker">Assigned Worker</label>
            <input type="text" class="form-control" id="taskWorker" required>
            <div class="invalid-feedback">Please provide the assigned worker.</div>
        </div>
        <!-- Comments -->
        <div class="form-group">
            <label for="taskComments">Comments</label>
            <textarea class="form-control" id="taskComments" rows="3" required></textarea>
            <div class="invalid-feedback">Please provide some comments.</div>
        </div>
        <!-- Contents -->
        <div class="form-group">
            <label for="taskContents">Contents</label>
            <textarea class="form-control" id="taskContents" rows="5" required></textarea>
            <div class="invalid-feedback">Please provide some contents.</div>
        </div>
        <!-- Hidden field for status -->
        <input type="hidden" id="taskStatus" value="1">
        <button type="submit" class="btn btn-primary mt-2" id="saveTaskButton">Add Task</button>
        <button type="button" class="btn btn-danger mt-2" id="cancelTaskButton">Cancel</button>
    </form>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Status</th>
                <th>Task Title</th>
                <th>Assigned Worker</th>
                <th>Buttons</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var task in Model.ListGroupStaff)
            {
                @Html.HiddenFor(model => task.TaskId)
                <tr>
                    <td>
                        @{
                            string CssClass;
                            string statusText;
                            switch (task.Status)
                            {
                                case 1:
                                    CssClass = "text-primary";
                                    statusText = "Open";
                                    break;
                                case 2:
                                    CssClass = "text-success";
                                    statusText = "Completed";
                                    break;
                                case 3:
                                    CssClass = "text-danger";
                                    statusText = "Problem";
                                    break;
                                default:
                                    CssClass = "";
                                    statusText = "Unknown";
                                    break;
                            }
                        }
                        <span class="@CssClass">@statusText</span>
                    </td>
                    <td>@task.Title</td>
                    <td>@task.StaffName @task.StaffSurname</td>
                    <td>
                        <div class="btn-group-action">
                            @{
                                switch (task.Status)
                                {
                                    case 1:
                                        CssClass = "btn-primary";
                                        break;
                                    case 2:
                                        CssClass = "btn-success";
                                        break;
                                    case 3:
                                        CssClass = "btn-danger";
                                        statusText = "Problem";
                                        break;
                                    default:
                                        CssClass = "";
                                        break;
                                }
                            }
                            <a class="btn @CssClass btn-sm" href="@Url.Action("Tasks", new { taskId = task.TaskId })">
                                <i class="fas fa-eye"></i> View Task
                            </a>
                            <form action="@Url.Action("UpdateTaskStatus", "GroupAdmin")" method="post" style="display:inline;">
                                <input type="hidden" name="taskId" value="@task.TaskId" />
                                <button type="submit" class="btn btn-success btn-sm">
                                    <i class="fas fa-check"></i> Complete
                                </button>
                            </form>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        document.getElementById('OpenAddTaskButton').addEventListener('click', function () {
            document.getElementById('addTaskForm').style.display = 'block';
        });

        document.getElementById('cancelTaskButton').addEventListener('click', function () {
            document.getElementById('addTaskForm').style.display = 'none';
        });

        document.getElementById('addTaskForm').addEventListener('submit', function (event) {
            event.preventDefault();
            var isValid = true;

            ['taskTitle', 'taskWorker', 'taskComments', 'taskContents'].forEach(function (id) {
                var element = document.getElementById(id);
                if (!element.value) {
                    element.classList.add('is-invalid');
                    isValid = false;
                } else {
                    element.classList.remove('is-invalid');
                }
            });

            if (isValid) {
                alert('Task added successfully!');
                this.reset();
                document.getElementById('addTaskForm').style.display = 'none';
            }
        });

    </script>
}