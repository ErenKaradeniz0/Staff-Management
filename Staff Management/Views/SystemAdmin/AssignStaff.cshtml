@model Staff_Management.Models.AssignStaffViewModel
@{
    ViewBag.Title = "AssignStaff";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-5">
    <div class="row">
        <div class="col-md-12">
            <nav class="navbar navbar-expand-lg navbar-light bg-light" style="padding: 0;">
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav" style="display: flex; width: 100%; justify-content: space-around;">
                        <li class="nav-item">
                            <a class="nav-link active" href="/SystemAdmin/Index" style="text-align: center;">Adjust Salaries</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/SystemAdmin/AssignStaff" style="text-align: center;">Assign Staff</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/SystemAdmin/CreateEditUser" style="text-align: center;">Create & Edit User</a>
                        </li>
                    </ul>
                </div>
            </nav>
        </div>
    </div>
</div>

<div class="container mt-5">
    <h2>Assign Staff</h2>

    <div id="groupAdminList">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Group Admin</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var admin in Model.AdminList)
                {
                    <tr>
                        <td>@admin.Name</td>
                        <td>
                            <button class="btn btn-info float-right" onclick="toggleStaffList('@admin.UserId', '@admin.Name')">Assign Staff</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div id="staffList" class="d-none">
        <h3>Assign Staff to Admin <span id="adminName" data-admin-id=""></span></h3>
        <ul id="staffUl" class="list-group">
            @foreach (var staff in Model.StaffList)
            {
                <li class="list-group-item">
                    <input type="checkbox" class="form-check-input" onclick="assignStaff(this, '@staff.Name')"> @staff.Name
                </li>
            }
        </ul>
        <div id="assignedStaff" class="mt-4">
            <h3>Staff working for Admin <span id="currentAdminName"></span></h3>
            <ul id="assignedStaffUl" class="list-group">
                <!-- Assigned staff members will be listed here -->
            </ul>
        </div>
    </div>
</div>

<script>
    const assignedStaff = {};

    function toggleStaffList(adminId, adminName) {
        const staffList = document.getElementById('staffList');
        const adminNameElement = document.getElementById('adminName');
        const currentAdminNameElement = document.getElementById('currentAdminName');

        if (staffList.classList.contains('d-none') || adminNameElement.getAttribute('data-admin-id') !== adminId) {
            // Show the staff list
            staffList.classList.remove('d-none');
            // Update the admin name and data-admin-id attribute
            adminNameElement.innerText = adminName;
            adminNameElement.setAttribute('data-admin-id', adminId);
            // Update the current admin name
            currentAdminNameElement.innerText = adminName;

            // Initialize assigned staff for this admin if not already
            if (!assignedStaff[adminId]) {
                assignedStaff[adminId] = [];
            }

            // Update the assigned staff list
            updateAssignedStaffList(adminId);
        } else {
            // Hide the staff list
            staffList.classList.add('d-none');
        }
    }

    function assignStaff(checkbox, staffName) {
        const adminId = document.getElementById('adminName').getAttribute('data-admin-id');

        if (!assignedStaff[adminId]) {
            assignedStaff[adminId] = [];
        }

        if (checkbox.checked) {
            assignedStaff[adminId].push(staffName);
        } else {
            const index = assignedStaff[adminId].indexOf(staffName);
            if (index !== -1) {
                assignedStaff[adminId].splice(index, 1);
            }
        }
        updateAssignedStaffList(adminId);
    }


    function updateAssignedStaffList(adminId) {
        const assignedStaffUl = document.getElementById('assignedStaffUl');
        assignedStaffUl.innerHTML = '';

        assignedStaff[adminId].forEach(staffName => {
            const li = document.createElement('li');
            li.className = 'list-group-item';
            li.innerText = staffName;
            assignedStaffUl.appendChild(li);
        });
    }
</script>
